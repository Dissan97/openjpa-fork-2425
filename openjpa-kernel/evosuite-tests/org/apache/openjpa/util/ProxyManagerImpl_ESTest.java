/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 29 15:57:05 GMT 2025
 */

package org.apache.openjpa.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.MinguoEra;
import java.time.format.FormatStyle;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.Collection;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TimeZone;
import org.apache.commons.collections.map.LinkedMap;
import org.apache.openjpa.datacache.AbstractQueryCache;
import org.apache.openjpa.kernel.DataCacheRetrieveMode;
import org.apache.openjpa.kernel.StoreQuery;
import org.apache.openjpa.lib.util.Options;
import org.apache.openjpa.util.Proxy;
import org.apache.openjpa.util.ProxyManagerImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import serp.bytecode.BCClass;
import serp.bytecode.Project;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProxyManagerImpl_ESTest extends ProxyManagerImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<ChronoUnit> class0 = ChronoUnit.class;
      proxyManagerImpl0.toProxyableMapType(class0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      proxyManagerImpl0.toProxyableMapType(class0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<AbstractQueryCache.EvictPolicy> class0 = AbstractQueryCache.EvictPolicy.class;
      Class class1 = proxyManagerImpl0.toProxyableCollectionType(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertTrue(class1.isEnum());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      Class class1 = proxyManagerImpl0.toProxyableCollectionType(class0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertEquals(1, class1.getModifiers());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      Class<?> class1 = proxyManagerImpl0.loadDelayedProxy(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertNull(class1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      proxyManagerImpl0.loadBuildTimeProxy(class0, (ClassLoader) null);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCustom("gMj|*xds9(oj(");
      Class<String> class0 = String.class;
      boolean boolean0 = proxyManagerImpl0.isUnproxyable(class0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(boolean0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      boolean boolean0 = proxyManagerImpl0.isOrdered(class0);
      assertFalse(boolean0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertTrue(proxyManagerImpl0.getTrackChanges());
      
      proxyManagerImpl0.setTrackChanges(false);
      boolean boolean0 = proxyManagerImpl0.getTrackChanges();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      
      proxyManagerImpl0.setDelayCollectionLoading(true);
      boolean boolean0 = proxyManagerImpl0.getDelayCollectionLoading();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      
      proxyManagerImpl0.setAssertAllowedType(true);
      boolean boolean0 = proxyManagerImpl0.getAssertAllowedType();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      proxyManagerImpl0.generateProxyCollectionBytecode(class0, true);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      proxyManagerImpl0.findCopyConstructor(class0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Hashtable<BCClass, BCClass> hashtable0 = new Hashtable<BCClass, BCClass>(121);
      Project project0 = new Project();
      BCClass bCClass0 = project0.loadClass("H");
      hashtable0.put(bCClass0, bCClass0);
      proxyManagerImpl0.copyMap(hashtable0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<FormatStyle> class0 = FormatStyle.class;
      boolean boolean0 = proxyManagerImpl0.allowsDuplicates(class0);
      assertTrue(boolean0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableMapType((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableCollectionType((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.setUnproxyable(";");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newMapProxy((Class) null, class0, class0, (Comparator) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newDateProxy((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCustomProxy(proxyManagerImpl0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$apache$openjpa$util$ProxyManagerImpl$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCollectionProxy((Class) null, (Class) null, (Comparator) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCalendarProxy((Class) null, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("target/classes/org/apache/openjpa/util/org$apache$openjpa$util$java$util$EnumMap$proxy$proxy.class");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      stringArray0[0] = "org.apache.openjpa.util.java$util$EnumMap$proxy";
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("target/classes/org/apache/openjpa/util/org$apache$openjpa$util$MetaDataException$proxy.class");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.openjpa.util.MetaDataException";
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.loadDelayedProxy((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.isSetter((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.isOrdered((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyMapBytecode(class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.String\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyMapBytecode((Class) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyDateBytecode(class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Custom date type \"class serp.bytecode.BCClass\" needs a default constructor or a millisecond constructor.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCollectionBytecode(class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.String\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCollectionBytecode((Class) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCalendarBytecode(class0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.String\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCalendarBytecode((Class) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyBeanBytecode((Class) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<MinguoEra> class0 = MinguoEra.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.findGetter(class0, (Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.findCopyConstructor((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.allowsDuplicates((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.openjpa.util.java$sql$Date$proxy";
      stringArray0[1] = "I=(vrbnUQRr%[]oy]";
      stringArray0[2] = "setsetRollbackOnly";
      stringArray0[3] = "getChangeTracker";
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "net.bytebuddy.description.type.TypeList$ForLoadedTypes";
      stringArray0[1] = "clearspliterator";
      stringArray0[2] = "no-proxy-abstract";
      stringArray0[3] = "Fw]~F^_}(FHJ@eM}qS";
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "java.util.EnumMap";
      ProxyManagerImpl.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      Constructor constructor0 = proxyManagerImpl0.findCopyConstructor(class0);
      assertNotNull(constructor0);
      assertEquals("public java.lang.String(java.lang.String)", constructor0.toString());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.apache.openjpa.conf.OpenJPAConfigurationImpl";
      stringArray0[1] = "clearmapIterator";
      stringArray0[2] = "removeentrySet";
      stringArray0[3] = "h+.#5Z(,\"rueu`";
      stringArray0[4] = "getChangeTracker";
      stringArray0[5] = "@aRls;:S~.%";
      // Undeclared exception!
      ProxyManagerImpl.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      LinkedMap linkedMap0 = StoreQuery.EMPTY_PARAMS;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyMap(linkedMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$apache$commons$collections$map$LinkedMap$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Stack<DataCacheRetrieveMode> stack0 = new Stack<DataCacheRetrieveMode>();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyCollection(stack0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.java$util$Stack$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyCollection(set0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.java$util$Collections$EmptySet$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.openjpa.util.NoResultException";
      // Undeclared exception!
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<AbstractQueryCache.EvictPolicy> class0 = AbstractQueryCache.EvictPolicy.class;
      proxyManagerImpl0.generateProxyBeanBytecode(class0, false);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.openjpa.enhance.ReflectingPersistenceCapable";
      stringArray0[1] = "cleargetAvailableLocales";
      stringArray0[2] = "getObjectCount";
      stringArray0[3] = "3<]e";
      // Undeclared exception!
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCollectionProxy(class0, class0, (Comparator) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.String\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      
      proxyManagerImpl0.setDelayCollectionLoading(true);
      LinkedList<ChronoLocalDate> linkedList0 = new LinkedList<ChronoLocalDate>();
      proxyManagerImpl0.copyCollection(linkedList0);
      assertTrue(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      
      proxyManagerImpl0.setDelayCollectionLoading(true);
      Class<String> class0 = String.class;
      Collection<String> collection0 = Options.findOptionsFor(class0);
      proxyManagerImpl0.copyCollection(collection0);
      assertTrue(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.isUnproxyable(class0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(boolean0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyCustom(proxyManagerImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$apache$openjpa$util$ProxyManagerImpl$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCustom("java.util.EnumMap");
      proxyManagerImpl0.copyCustom("java.util.EnumMap");
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<AbstractQueryCache.EvictPolicy> class0 = AbstractQueryCache.EvictPolicy.class;
      Class<String> class1 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newMapProxy(class0, class1, class1, (Comparator) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$apache$openjpa$datacache$AbstractQueryCache$EvictPolicy$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      HashMap<HashMap<String, String>, AbstractQueryCache.EvictPolicy> hashMap0 = new HashMap<HashMap<String, String>, AbstractQueryCache.EvictPolicy>();
      Object object0 = proxyManagerImpl0.copyCustom(hashMap0);
      Object object1 = proxyManagerImpl0.copyCustom(object0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableMapType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for interface \"null\".  No corresponding concrete types are known.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableCollectionType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for interface \"null\".  No corresponding concrete types are known.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Object object0 = new Object();
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(object0, true);
      assertNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.newCustomProxy("gMj|*xds9(oj(", true);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.newCustomProxy((Object) null, true);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCustom((Object) null);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCalendarProxy(class0, (TimeZone) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.serp$bytecode$BCClass$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyCalendar(mockGregorianCalendar0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$evosuite$runtime$mock$java$util$MockGregorianCalendar$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCalendar((Calendar) null);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-9L));
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyDate(mockDate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$evosuite$runtime$mock$java$util$MockDate$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyDate((Date) null);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      HashMap<HashMap<String, String>, AbstractQueryCache.EvictPolicy> hashMap0 = new HashMap<HashMap<String, String>, AbstractQueryCache.EvictPolicy>();
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(hashMap0, false);
      assertNotNull(proxy0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Hashtable<BCClass, BCClass> hashtable0 = new Hashtable<BCClass, BCClass>(121);
      proxyManagerImpl0.copyMap(hashtable0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyMap((Map) null);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCollection((Collection) null);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyArray((Object) null);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyArray("s?-}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to copy array: Argument is not an array.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.setUnproxyable("w%'mQFW>l^M90q");
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.setUnproxyable((String) null);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.openjpa.util.InternalException";
      ProxyManagerImpl.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      proxyManagerImpl0.generateProxyCalendarBytecode(class0, false);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.getDelayCollectionLoading();
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(boolean0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      Class<AbstractQueryCache.EvictPolicy> class1 = AbstractQueryCache.EvictPolicy.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCollectionProxy(class1, class0, (Comparator) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$apache$openjpa$datacache$AbstractQueryCache$EvictPolicy$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.getTrackChanges();
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.setDelayCollectionLoading(true);
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyCustom(proxyManagerImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.openjpa.util.org$apache$openjpa$util$ProxyManagerImpl$0$proxy
         //
         verifyException("org.apache.openjpa.util.GeneratedClasses", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.getAssertAllowedType();
      assertFalse(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      proxyManagerImpl0.generateProxyMapBytecode(class0, false);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<BCClass> class0 = BCClass.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newDateProxy(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Custom date type \"class serp.bytecode.BCClass\" needs a default constructor or a millisecond constructor.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.getUnproxyable();
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }
}
